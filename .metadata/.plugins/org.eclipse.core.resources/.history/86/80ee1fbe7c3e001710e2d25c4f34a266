import processing.core.PApplet;
import processing.core.PImage;

public class FinalBoss extends GravitisedObj{
	
	public static final int MAX_HP = 100;
	private final int ATT_DELAY = 20;
	private final int ATT_DMG = 18;
	private int hp;
	private Manager manager;
	private boolean rightWalkCode;
	private boolean leftWalkCode;
	private boolean hasJumped;
	private boolean spacePressed;
	private boolean rightFacing;
	private int attTmr;
	public static PImage[] idle;
	public static PImage[] running;
	public static PImage[] slashing;
	private int slashTimer;
	private int animationTimer;
	private int state; //1=idle, 2=running, 3=slashing
	//private Player player;
	
	public FinalBoss(int x, int y, int mass, int width, int height, Manager man)
	{
		super(x, y, mass, width, height,man);
		hp = MAX_HP;
		//manager = m;
		rightWalkCode=false;
		hasJumped = true;
		leftWalkCode = false;
		spacePressed = false;
		rightFacing = true;
		attTmr = 0;
		state=1;
		manager=man;
		//player=new Player(10000, 0, 10,140*3/4, 260*3/4, man);
	}
	
	public void draw(PApplet g)
	{
		g.pushMatrix();
		g.pushStyle();
		g.fill(255,0,0);
		g.rect(x, y, width, height);
		//g.text(""+currentInvSpot, x, y-20);
		g.popStyle();
		if(!rightFacing)
		{
			g.scale(-1,1);
		}


		if(slashTimer>0)
		{
			if(animationTimer==36)
			{

				animationTimer=0;
			}
			if(animationTimer<3)
			{
				//System.out.println(slashing[0]);
				if(rightFacing)
					g.image(slashing[0], x, y, width,height);
				else
					g.image(slashing[0], -x, y, -width,height);

			}
			else if(animationTimer<6)
			{
				width+=15;

				if(rightFacing)
					g.image(slashing[1], x, y, width,height);
				else
					g.image(slashing[1], -x+15, y, -width,height);
				width-=15;
			}
			else
			{
				width+=15;

				if(rightFacing)
					g.image(slashing[2], x, y, width,height);
				else
					g.image(slashing[2],-x+15,y, -width,height);
				width-=15;

			}
			//g.image(slashing, x, y,100,100);
		}
		else if(state==2)
		{

			if(rightFacing)
				g.image(running[(animationTimer%20)/4], x, y, width,height);
			else
				g.image(running[(animationTimer%20)/4],-x,y, -width,height);
		}
		else
		{
			if(rightFacing)
				g.image(idle[(animationTimer%60)/6], x, y, width,height);
			else
				g.image(idle[(animationTimer%60)/6],-x,y, -width,height);
		}
		g.popMatrix();
		animationTimer++;
	}
	
	public void act(double ratio)
	{
		super.posUpdate(ratio);
	}
	
	
	

}
